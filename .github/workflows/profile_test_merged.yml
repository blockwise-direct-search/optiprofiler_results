name: Profile cbds and simplex using optiprofiler, small

on:
  # Trigger the workflow on # push or pull request
  push:
  # Trigger the workflow manually
  # schedule:
  # - cron: '0 0 */3 * *'
  workflow_dispatch:

jobs:
  test:
    name: Profile BDS and fminsearch, small
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [small]
        with_optim_toolbox: [yes]
        solver: [cbds]
        competitor: [fminsearch]
        run_plain: [false]
        feature: [plain, perturbed_x0, perturbed_x0_01, perturbed_x0_10]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Checkout OptiProfiler
        uses: actions/checkout@v4
        with:
          repository: optiprofiler/optiprofiler
          ref: matlab
          path: optiprofiler
      
      - name: Checkout BDS
        uses: actions/checkout@v4
        with:
          repository: blockwise-direct-search/bds
          ref: main
          path: bds

      - name: Install Texlive
        run: sudo apt-get update && sudo apt-get install texlive

      - name: Check whether LaTeX is installed
        run: pdflatex --version

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v4.0.1
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-${{ matrix.with_optim_toolbox }}

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2.1.2
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox
      

      - name: Run test
        uses: matlab-actions/run-command@v2.1.1
        with:
            command: |
              root_dir = pwd()
              ls
  
              % Setup optiprofiler
              cd(fullfile(root_dir, 'optiprofiler'));
              setup
              cd(root_dir);
  
              % Setup bds
              cd(fullfile(root_dir, 'bds'));
              setup
              cd(fullfile(root_dir, 'bds', 'tests', 'competitors'));
              addpath(pwd);
  
              % profile
              cd(fullfile(root_dir, 'bds', 'tests'));
              options = struct();
              options.feature_name = '${{ matrix.feature }}';
              options.solver_names = {'${{ matrix.solver }}', '${{ matrix.competitor }}'};
              options.dim = '${{ matrix.dim }}';
              options = rmfield(options, 'dim');
              options.mindim = 1;
              options.maxdim = 2;
              options.n_runs = 1;
              options.run_plain = ${{ matrix.run_plain }};
              profile_optiprofiler(options);
              cd(root_dir);
              cd(fullfile(root_dir, 'bds', 'tests', 'out'));
              ls -R
              cd(root_dir);

      - name: Change the summary file name
        run: |
          cd ./bds/tests/out
          ls -R
          find . -type f -name 'summary*.pdf' | while read -r file; do
          # Obtain the parent directory and name
          parent_dir=$(dirname "$file")
          parent_name=$(basename "$parent_dir")

          # Obtain the new name(Why the fifth underline? Because the last five parts are the time stamp)
          new_name=$(echo "$parent_name" | awk -F'_' '{if(NF>=5) {for(i=1;i<=NF-5;i++) printf "%s%s", $i, (i<NF-5?"_":"")} else print $0}')

          # Print the new name
          echo "New name: $new_name"

          # Obtain the directory name
          dir_name=$(dirname "$file")

          # Rename the file
          mv "$file" "$dir_name/summary_$new_name.pdf"
          echo "Renamed $file to $dir_name/summary_$new_name.pdf"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: profile_optiprofiler_${{ matrix.solver }}_${{ matrix.competitor }}_${{ matrix.dim }}_${{ matrix.feature }}_${{ matrix.run_plain }}
          path: ./bds/tests/out/**

  merge_artifacts:
    name: Merge Artifacts
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: read
      contents: read
    
    steps:
      - name: Checkout BDS
        uses: actions/checkout@v4
        with:
          repository: blockwise-direct-search/bds
          ref: main
          path: bds

      - name: Install PDF tools
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: bds/tests/testdata/downloaded_artifacts

      - name: List all files
        run: |
          cd bds
          ls -R
          # cd bds/tests/testdata/downloaded_artifacts
          # ls -R

      - name: Merge PDF files
        run: |
          cp bds/tests/tools/merge_pdf.sh bds/tests/testdata/downloaded_artifacts
          cd bds/tests/testdata/downloaded_artifacts/

          ARTIFACT_NAME=$(ls | grep "profile_optiprofiler" | head -n 1)
          BASE_INFO=$(echo $ARTIFACT_NAME | sed -n 's/.*optiprofiler_\([^_]*_[^_]*_\(small\|big\)\).*/\1/p')
          echo "Base info extracted: ${BASE_INFO}"

          bash merge_pdf.sh

          cd bds/tests/testdata/downloaded_artifacts/summary/
          mv merged.pdf "summary_${BASE_INFO}.pdf"

          cd bds/tests/testdata/downloaded_artifacts/
          if [ -d "summary" ]; then
            mv summary "summary_${BASE_INFO}"
          fi

      - name: Upload merged artifact
        uses: actions/upload-artifact@v3
        with:
          name: merged_profiles
          path: bds/tests/testdata/downloaded_artifacts/**

      - name: Upload summary files
        uses: actions/upload-artifact@v3
        with:
          name: summary_files
          path: bds/tests/testdata/downloaded_artifacts/summary/**
