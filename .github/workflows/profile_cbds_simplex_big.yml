name: Profile cbds and simplex using optiprofiler, big

on:
  # Trigger the workflow on push or pull request
  push:
  # Trigger the workflow manually
  # schedule:
  # - cron: '0 0 */3 * *'
  workflow_dispatch:

jobs:
  test:
    name: Profile BDS and fminsearch, big
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [big]
        with_optim_toolbox: [yes]
        solver: [cbds]
        competitor: [fminsearch]
        run_plain: [false]
        feature: [plain, perturbed_x0]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Checkout BDS
        uses: actions/checkout@v4
        with:
          repository: blockwise-direct-search/bds
          ref: main
          path: bds

      - name: Install Texlive
        run: sudo apt-get update && sudo apt-get install texlive

      - name: Check whether LaTeX is installed
        run: pdflatex --version

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v4.0.1
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-${{ matrix.with_optim_toolbox }}

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2.1.2
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox
      

      - name: Run test
        uses: matlab-actions/run-command@v2.1.1
        with:
            command: |
              root_dir = pwd()
              ls
  
              % Setup optiprofiler
              cd(fullfile(root_dir, 'optiprofiler'));
              setup
              cd(root_dir);
  
              % Setup bds
              cd(fullfile(root_dir, 'bds'));
              setup
              cd(fullfile(root_dir, 'bds', 'tests', 'competitors'));
              addpath(pwd);
  
              % profile
              cd(fullfile(root_dir, 'bds', 'tests'));
              options = struct();
              options.feature_name = '${{ matrix.feature }}';
              options.labels = {'${{ matrix.solver }}', '${{ matrix.competitor }}'};
              options.dim = '${{ matrix.dim }}';
              options = rmfield(options, 'dim');
              options.mindim = 1;
              options.maxdim = 1;
              options.run_plain = ${{ matrix.run_plain }};
              profile_optiprofiler(options);
              cd(root_dir);


      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: profile_optiprofiler_${{ matrix.solver }}_${{ matrix.competitor }}_${{ matrix.dim }}_${{ matrix.feature }}_${{ matrix.run_plain }}
          path: ./bds/tests/out/**

  merge_artifacts:
    name: Merge Artifacts
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: read
      contents: read
    
    steps:
      - name: Install PDF tools
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: downloaded_artifacts

      - name: List downloaded files
        run: |
          echo "Downloaded files:"
          ls -R downloaded_artifacts/

      - name: Merge PDF files
        run: |
          cd downloaded_artifacts
          mkdir summary
          find . -type f -name 'summary*.pdf' -exec cp {} summary/ \;
          cd summary
          pdfunite *.pdf ../merged.pdf
          echo "Merged PDF files into merged.pdf"

      - name: Upload merged artifact
        uses: actions/upload-artifact@v3
        with:
          name: merged_profiles
          path: downloaded_artifacts/merged.pdf
