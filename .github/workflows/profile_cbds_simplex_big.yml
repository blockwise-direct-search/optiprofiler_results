name: Profile cbds and simplex using optiprofiler, big

on:
  push:
  workflow_dispatch:

jobs:
  test:
    name: Profile BDS and fminsearch, big
    runs-on: ${{ matrix.os }}
    outputs:
      matrix-features: ${{ toJSON(matrix.feature) }}
      matrix-solver: ${{ matrix.solver }}
      matrix-competitor: ${{ matrix.competitor }}
      matrix-dim: ${{ matrix.dim }}
      matrix-run-plain: ${{ matrix.run_plain }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [big]
        with_optim_toolbox: [yes]
        solver: [cbds]
        competitor: [fminsearch]
        run_plain: [false]
        feature: [plain, perturbed_x0]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Checkout BDS
        uses: actions/checkout@v4
        with:
          repository: blockwise-direct-search/bds
          ref: main
          path: bds

      - name: Update the name of the summary file
        run: cd ./bds/tests/ && mkdir out/ && cd ./out && touch summary.pdf && mv summary.pdf summary_${{ matrix.solver }}_${{ matrix.competitor }}_${{ matrix.dim }}_${{ matrix.feature }}_${{ matrix.run_plain }}.pdf

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: profile_optiprofiler_${{ matrix.solver }}_${{ matrix.competitor }}_${{ matrix.dim }}_${{ matrix.feature }}_${{ matrix.run_plain }}
          path: ./bds/tests/out/**

  merge_artifacts:
    name: Merge Artifacts
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: read
      contents: read
    
    steps:
      - name: Install PDF tools
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Download artifacts for each feature
        run: |
          features='${{ needs.test.outputs.matrix-features }}'
          features=$(echo $features | jq -r '.[]')
          solver="${{ needs.test.outputs.matrix-solver }}"
          competitor="${{ needs.test.outputs.matrix-competitor }}"
          dim="${{ needs.test.outputs.matrix-dim }}"
          run_plain="${{ needs.test.outputs.matrix-run-plain }}"
          
          mkdir -p downloaded_artifacts
          for feature in $features; do
            echo "Downloading artifacts for feature: $feature"
            gh actions-artifact download "profile_optiprofiler_${solver}_${competitor}_${dim}_${feature}_${run_plain}" downloaded_artifacts/${feature}
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List downloaded files
        run: |
          echo "Downloaded files:"
          ls -R downloaded_artifacts/

      - name: Merge PDF files
        run: |
          cd downloaded_artifacts
          pdfunite */*.pdf merged.pdf
          echo "Merged PDF files into merged.pdf"

      - name: Upload merged artifact
        uses: actions/upload-artifact@v3
        with:
          name: merged_artifact
          path: downloaded_artifacts/merged.pdf
          retention-days: 1